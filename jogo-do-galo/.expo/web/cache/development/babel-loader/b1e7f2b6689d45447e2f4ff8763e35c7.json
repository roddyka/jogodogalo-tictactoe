{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Component } from \"react-native-web/dist/index\";\nimport logo from \"./assets/galo.png\";\nimport winnerlogo from \"./assets/galo2.png\";\nimport bola from \"./assets/bola.png\";\nimport ranking from \"./assets/ranking.png\";\nimport xis from \"./assets/x.png\";\nimport styles from \"./assets/css/Css.Component.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('menu'),\n      _useState2 = _slicedToArray(_useState, 2),\n      screen = _useState2[0],\n      setScreen = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      player1 = _useState4[0],\n      setPlayer1 = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      player2 = _useState6[0],\n      setPlayer2 = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      table = _useState8[0],\n      setTable = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      last = _useState10[0],\n      setLast = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      winner = _useState12[0],\n      setWinner = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      point = _useState14[0],\n      setPoint = _useState14[1];\n\n  var myObjArray = [];\n  var turnChange = false;\n  var endgame_validate = false;\n\n  switch (screen) {\n    case 'menu':\n      return getTelaMenu();\n      break;\n\n    case 'game':\n      return getTelaGame();\n      break;\n\n    case 'winner':\n      return getTelaWinner();\n      break;\n\n    case 'ranking':\n      return getTelaRanking();\n      break;\n\n    default:\n      break;\n  }\n\n  function StartGame(player) {\n    setPlayer1(player);\n\n    if (player === 'X') {\n      setPlayer2('O');\n    }\n\n    if (player === 'O') {\n      setPlayer2('X');\n    }\n\n    setLast(9);\n    setTable([['', '', ''], ['', '', ''], ['', '', '']]);\n    setScreen('game');\n  }\n\n  function play(column, line, player) {\n    table[line][column] = player;\n    setTable(_toConsumableArray(table));\n    checkWinner(table, line, column);\n    setPlayer1(player === 'X' ? 'O' : 'X');\n    var RandomNumberLine = Math.floor(Math.random() * 3);\n    var RandomNumberColumn = Math.floor(Math.random() * 3);\n    enemyPlaying(player2, RandomNumberLine, RandomNumberColumn);\n  }\n\n  function enemyPlaying(player, RandomNumberLine, RandomNumberColumn) {\n    turnChange = true;\n\n    if (endgame_validate === false) {\n      console.log('enemy?');\n      var table_position = table[RandomNumberLine][RandomNumberColumn].length;\n\n      if (table_position > 0) {\n        RandomNumberLine = Math.floor(Math.random() * 3);\n        RandomNumberColumn = Math.floor(Math.random() * 3);\n        table_position = table[RandomNumberLine][RandomNumberColumn];\n        enemyPlaying(player, RandomNumberLine, RandomNumberColumn);\n      } else {\n        setTimeout(function () {\n          if (turnChange) {\n            play(RandomNumberColumn, RandomNumberLine, player);\n            console.log(table[RandomNumberLine][RandomNumberColumn].length);\n          }\n\n          turnChange = false;\n        }, 1000);\n      }\n    }\n  }\n\n  function endGame(player) {\n    setWinner(player);\n    setScreen('winner');\n  }\n\n  function checkWinner(table, line, column) {\n    console.log('checking...');\n\n    if (table[line][0] !== '' && table[line][0] === table[line][1] && table[line][1] === table[line][2]) {\n      turnChange = false;\n      endgame_validate = true;\n      console.log('winner linha');\n      return endGame(table[line][0]);\n    }\n\n    if (table[0][column] !== '' && table[0][column] === table[1][column] && table[1][column] === table[2][column]) {\n      turnChange = false;\n      endgame_validate = true;\n      console.log('winner coluna');\n      return endGame(table[0][column]);\n    }\n\n    if (table[0][0] !== '' && table[0][0] === table[1][1] && table[1][1] === table[2][2]) {\n      turnChange = false;\n      endgame_validate = true;\n      console.log('winner diagonal');\n      return endGame(table[0][0]);\n    }\n\n    if (table[0][2] !== '' && table[0][2] === table[1][1] && table[1][1] === table[2][0]) {\n      turnChange = false;\n      endgame_validate = true;\n      console.log('winner diagonal2');\n      return endGame(table[0][2]);\n    }\n\n    if (last - 1 === 0) {\n      turnChange = false;\n      endgame_validate = true;\n      console.log('nenhum winner');\n      return endGame('');\n    }\n\n    setLast(last - 1);\n  }\n\n  function getTelaMenu() {\n    console.log(point);\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        source: logo,\n        style: {\n          width: 200,\n          height: 200\n        }\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Jogo do Galo\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Selecione o Jogador\"\n      }), _jsxs(View, {\n        style: styles.containerPlayer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.touchable,\n          onPress: function onPress() {\n            return StartGame('X');\n          },\n          children: _jsxs(ImageBackground, {\n            source: xis,\n            resizeMode: \"cover\",\n            style: styles.image,\n            children: [\" \", _jsx(Text, {\n              style: styles.playerX,\n              children: \" \"\n            })]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.touchable,\n          onPress: function onPress() {\n            return StartGame('O');\n          },\n          children: _jsxs(ImageBackground, {\n            source: bola,\n            resizeMode: \"cover\",\n            style: styles.image,\n            children: [\" \", _jsx(Text, {\n              style: styles.playerO,\n              children: \" \"\n            })]\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.rankingBtn,\n        onPress: function onPress() {\n          return setScreen('ranking');\n        },\n        children: _jsx(Text, {\n          style: styles.backtoMenuText,\n          children: \"Ranking\"\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    });\n  }\n\n  function getTelaGame() {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Jogo do galo\"\n      }), table.map(function (line, numberline) {\n        return _jsx(View, {\n          style: styles.containerPlayer,\n          children: line.map(function (column, numberColumn) {\n            return _jsxs(TouchableOpacity, {\n              style: styles.touchable,\n              onPress: function onPress() {\n                return play(numberColumn, numberline, player1);\n              },\n              disabled: column !== '' ? true : {\n                turnChange: turnChange\n              } === 0 ? true : '',\n              children: [column === 'O' && _jsxs(ImageBackground, {\n                source: bola,\n                resizeMode: \"cover\",\n                style: styles.image,\n                children: [\" \", _jsx(Text, {\n                  style: column === 'X' ? styles.playerX : styles.playerO\n                })]\n              }), column === 'X' && _jsxs(ImageBackground, {\n                source: xis,\n                resizeMode: \"cover\",\n                style: styles.image,\n                children: [\" \", _jsx(Text, {\n                  style: column === 'X' ? styles.playerX : styles.playerO\n                })]\n              })]\n            }, numberColumn);\n          })\n        }, numberline);\n      }), _jsx(TouchableOpacity, {\n        style: styles.backtoMenu,\n        onPress: function onPress() {\n          return setScreen('menu');\n        },\n        children: _jsx(Text, {\n          style: styles.backtoMenuText,\n          children: \"Reiniciar\"\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    });\n  }\n\n  function getTelaWinner() {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Jogo do Galo\"\n      }), _jsxs(View, {\n        style: styles.containerwinner,\n        children: [winner === '' && _jsx(_Fragment, {\n          children: _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(Image, {\n              source: logo,\n              style: {\n                width: 300,\n                height: 300\n              }\n            }), _jsx(Text, {\n              style: styles.winner,\n              children: \"GALO!\"\n            })]\n          })\n        }), winner !== '' && _jsx(_Fragment, {\n          children: _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(Image, {\n              source: winnerlogo,\n              style: {\n                width: 300,\n                height: 300\n              }\n            }), _jsxs(Text, {\n              style: styles.point,\n              children: [\"Points: \", point]\n            }), _jsxs(View, {\n              style: styles.touchable,\n              children: [winner === 'O' && _jsx(_Fragment, {\n                children: _jsx(ImageBackground, {\n                  source: bola,\n                  resizeMode: \"cover\",\n                  style: styles.image,\n                  children: _jsx(Text, {\n                    style: winner === 'X' ? styles.playerX : styles.playerO\n                  })\n                })\n              }), winner === 'X' && _jsx(_Fragment, {\n                children: _jsx(ImageBackground, {\n                  source: xis,\n                  resizeMode: \"cover\",\n                  style: styles.image,\n                  children: _jsx(Text, {\n                    style: winner === 'X' ? styles.playerX : styles.playerO\n                  })\n                })\n              })]\n            })]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.backtoMenu,\n          onPress: function onPress() {\n            return setScreen('menu');\n          },\n          children: _jsx(Text, {\n            style: styles.backtoMenuText,\n            children: \"Back to Menu\"\n          })\n        })]\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    });\n  }\n\n  function getTelaRanking() {\n    console.log(getData());\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Jogo do Galo\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Ranking\"\n      }), _jsx(Image, {\n        source: ranking,\n        style: {\n          width: 200,\n          height: 200\n        }\n      }), _jsx(View, {\n        style: styles.containerwinner,\n        children: _jsx(TouchableOpacity, {\n          style: styles.backtoMenu,\n          onPress: function onPress() {\n            return setScreen('menu');\n          },\n          children: _jsx(Text, {\n            style: styles.backtoMenuText,\n            children: \"Back to Menu\"\n          })\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    });\n  }\n\n  function getData() {\n    console.log(point);\n    return myObjArray;\n  }\n\n  function savePoints(player, points, myObjArray) {\n    setPoint([].concat(_toConsumableArray(point), [{\n      id: player,\n      name: points\n    }]));\n    myObjArray.push({\n      id: player,\n      name: points\n    });\n    console.log(myObjArray);\n    return myObjArray;\n  }\n}","map":{"version":3,"names":["StatusBar","React","useState","Component","logo","winnerlogo","bola","ranking","xis","styles","App","screen","setScreen","player1","setPlayer1","player2","setPlayer2","table","setTable","last","setLast","winner","setWinner","point","setPoint","myObjArray","turnChange","endgame_validate","getTelaMenu","getTelaGame","getTelaWinner","getTelaRanking","StartGame","player","play","column","line","checkWinner","RandomNumberLine","Math","floor","random","RandomNumberColumn","enemyPlaying","console","log","table_position","length","setTimeout","endGame","container","width","height","title","subtitle","containerPlayer","touchable","image","playerX","playerO","rankingBtn","backtoMenuText","map","numberline","numberColumn","backtoMenu","containerwinner","getData","savePoints","points","id","name","push"],"sources":["C:/Users/rodri/Documents/Work/Development/tictactoe-reactnative/jogo-do-galo/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,  { useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image, ImageBackground, Component  } from 'react-native';\nimport logo from './assets/galo.png';\nimport winnerlogo from './assets/galo2.png';\nimport bola from './assets/bola.png';\nimport ranking from './assets/ranking.png';\nimport xis from './assets/x.png';\nimport styles from './assets/css/Css.Component.style';\n// import GetTelaMenu from './sceen/Menu';\n// import GetTelaGame from './sceen/Menu';\n// import GetTelaWinner from './sceen/Menu';\n// import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function App() {\n\n  const [screen, setScreen] = useState('menu');\n  const [player1, setPlayer1] = useState('');\n  const [player2, setPlayer2] = useState('');\n  const [table, setTable] = useState([]);\n  const [last, setLast] = useState(0);\n  const [winner, setWinner] = useState('');\n\n  const [point, setPoint] = useState([]);\n  const myObjArray = [];\n\n  let turnChange = false;\n  let endgame_validate = false;\n\n  //mudança de telas \n  switch (screen) {\n    case 'menu':\n      return getTelaMenu();\n      // return <GetTelaMenu />\n      break;\n    case 'game':\n      return getTelaGame();\n      break;\n    case 'winner':\n      return getTelaWinner();\n      break;\n  \n    case 'ranking':\n      return getTelaRanking();\n      break;\n  \n    default:\n      break;\n  }\n\n  //iniciando o jogo e redirecionando para a tela de menu\n  function StartGame(player){\n    setPlayer1(player);\n    if(player === 'X'){ \n      setPlayer2('O');\n    }\n\n    if(player === 'O'){ \n      setPlayer2('X');\n    }\n    setLast(9);\n    setTable([\n      ['','',''],\n      ['','',''],\n      ['','',''],\n    ]);\n    setScreen('game');\n  }\n\n  //FUNCIONALIDADES ->\n  //função do gameplay\n  function play(column, line, player){\n    table[line][column] = player;\n    setTable([...table]);\n    checkWinner(table, line, column);\n    setPlayer1(player === 'X' ? 'O' : 'X');\n    \n    let RandomNumberLine = Math.floor(Math.random() * 3 ) ;\n    let RandomNumberColumn = Math.floor(Math.random() * 3 ) ;\n    enemyPlaying(player2, RandomNumberLine, RandomNumberColumn);\n  }\n\n  //inimigo jogando\n  function enemyPlaying(player, RandomNumberLine, RandomNumberColumn ){\n    turnChange = true;\n      if(endgame_validate === false){\n        console.log('enemy?');\n        let table_position = table[RandomNumberLine][RandomNumberColumn].length;\n        if(table_position > 0) {\n          RandomNumberLine = Math.floor(Math.random() * 3 ) ;\n          RandomNumberColumn = Math.floor(Math.random() * 3 ) ;\n          table_position = table[RandomNumberLine][RandomNumberColumn];\n          enemyPlaying(player, RandomNumberLine, RandomNumberColumn);\n        }else {\n          setTimeout(() => {\n            if(turnChange){\n              play(RandomNumberColumn, RandomNumberLine, player);\n              console.log(table[RandomNumberLine][RandomNumberColumn].length);\n            }\n            turnChange = false;\n            }, 1000);\n        }\n      }\n  }\n\n  //fim do jogo redirecionamento e pontuação\n  function endGame(player){\n    setWinner(player);\n    // savePoints(player, 10, myObjArray);\n    setScreen('winner');\n  }\n\n //checkando qem é o vencedor\n  function checkWinner(table, line, column){\n    console.log('checking...');\n    //linha\n    if(table[line][0] !== '' && table[line][0] === table[line][1] && table[line][1] === table[line][2]){\n      turnChange = false;\n      endgame_validate = true;\n      console.log('winner linha');\n      return endGame(table[line][0]);\n    }\n\n     //coluna\n    if(table[0][column] !== '' && table[0][column] === table[1][column] && table[1][column] === table[2][column]){\n      turnChange = false;\n      endgame_validate = true;\n      console.log('winner coluna');\n      return endGame(table[0][column]);\n    }\n\n    //diagonal1\n    if(table[0][0] !== '' && table[0][0] === table[1][1] && table[1][1] === table[2][2]){\n      turnChange = false;\n      endgame_validate = true;\n      console.log('winner diagonal');\n      return endGame(table[0][0]);\n    }\n\n    //diagonal2\n    if(table[0][2] !== '' && table[0][2] === table[1][1] && table[1][1] === table[2][0]){\n      turnChange = false;\n      endgame_validate = true;\n      console.log('winner diagonal2');\n      return endGame(table[0][2]);\n    }\n\n    //nenhum ganhador\n    if(last - 1 === 0){\n      turnChange = false;\n      endgame_validate = true;\n      // setPoint(0);\n      console.log('nenhum winner');\n      return endGame('');\n    }\n\n    setLast((last - 1));\n  }\n\n  //TELAS -> \n  //tela de menu\n  function getTelaMenu(){\n    console.log(point);\n    return (\n      <View style={styles.container}>\n        \n        <Image source={logo} style={{ width: 200, height: 200 }} />\n        <Text style={styles.title}>Jogo do Galo</Text>\n        <Text style={styles.subtitle}>Selecione o Jogador</Text>\n        <View style={styles.containerPlayer}>\n          <TouchableOpacity style={styles.touchable} onPress={()=>StartGame('X')}>\n            <ImageBackground source={xis} resizeMode=\"cover\" style={styles.image}> <Text  style={styles.playerX}> </Text></ImageBackground>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.touchable} onPress={()=>StartGame('O')}>\n            <ImageBackground source={bola} resizeMode=\"cover\" style={styles.image}> <Text  style={styles.playerO}> </Text></ImageBackground>\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity style={styles.rankingBtn} onPress={()=>setScreen('ranking')}>\n          <Text style={styles.backtoMenuText} >Ranking</Text> \n        </TouchableOpacity>\n        <StatusBar style=\"auto\" />\n      </View>\n    );\n  }\n\n  //tela do game\n  function getTelaGame(){\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Jogo do galo</Text>\n\n        {\n          table.map((line, numberline) => {\n            return (\n              <View key={numberline} style={styles.containerPlayer}>\n                {line.map((column,numberColumn) => {\n                  return(\n                    <TouchableOpacity \n                    key={numberColumn} \n                    style={styles.touchable} \n                    onPress={()=>play(numberColumn,numberline, player1)}\n                    disabled={column !== '' ? true : ({turnChange} === 0 ? true : '')}\n                    >\n                      {\n                        column === 'O' &&\n                        <ImageBackground source={bola} resizeMode=\"cover\" style={styles.image}> <Text style={column === 'X' ? styles.playerX : styles.playerO }></Text></ImageBackground>\n                      }\n                      {   \n                        column === 'X' &&\n                        <ImageBackground source={xis} resizeMode=\"cover\" style={styles.image}> <Text style={column === 'X' ? styles.playerX : styles.playerO }></Text></ImageBackground>\n                      }\n                    </TouchableOpacity>\n                  )\n                })}\n              </View>\n            )\n          })\n        }\n\n        <TouchableOpacity style={styles.backtoMenu} onPress={()=>setScreen('menu')}>\n          <Text style={styles.backtoMenuText} >Reiniciar</Text>\n        </TouchableOpacity>\n        <StatusBar style=\"auto\" />\n      </View>\n    );\n  }\n\n  //tela de vencedor\n  function getTelaWinner(){\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Jogo do Galo</Text>\n        <View style={styles.containerwinner}>\n         {\n\n          winner === '' && \n          <><View style={styles.container}><Image source={logo} style={{ width: 300, height: 300 }} />\n          <Text style={styles.winner}>GALO!</Text></View></>\n         }\n         {\n          winner !== '' && \n          <>\n           <View style={styles.container}>\n            {/* <ConfettiCannon count={200} origin={{x: -10, y: 0}} /> */}\n             <Image source={winnerlogo} style={{ width: 300, height: 300 }} />\n             <Text style={styles.point}>Points: {point}</Text>\n              <View style={styles.touchable}>\n              {\n                winner === 'O' &&\n                <>\n                <ImageBackground source={bola} resizeMode=\"cover\" style={styles.image}>\n                  <Text style={winner === 'X' ? styles.playerX : styles.playerO }></Text> \n                </ImageBackground></>\n              }\n              {\n                winner === 'X' &&\n                <>\n                <ImageBackground source={xis} resizeMode=\"cover\" style={styles.image}>\n                  <Text style={winner === 'X' ? styles.playerX : styles.playerO }></Text>\n                </ImageBackground></>\n              }\n              </View>\n            </View>\n          </>\n\n         }\n          <TouchableOpacity style={styles.backtoMenu} onPress={()=>setScreen('menu')}>\n            <Text style={styles.backtoMenuText} >Back to Menu</Text>\n          </TouchableOpacity>\n        </View>\n        <StatusBar style=\"auto\" />\n      </View>\n    );\n  }\n\n  //tela de Ranking\n  function getTelaRanking(){\n    console.log(getData());\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Jogo do Galo</Text>\n        <Text style={styles.subtitle}>Ranking</Text>\n        <Image source={ranking} style={{ width: 200, height: 200 }} />\n        <View style={styles.containerwinner}>\n          <TouchableOpacity style={styles.backtoMenu} onPress={()=>setScreen('menu')}>\n            <Text style={styles.backtoMenuText} >Back to Menu</Text>\n          </TouchableOpacity>\n        </View>\n        <StatusBar style=\"auto\" />\n      </View>\n    );\n  }\n\n  //INFORMAÇAO E STORAGE\n  //pegar a informação salva dos pontos\n  function getData() {\n    console.log(point);\n    return myObjArray;\n  }\n \n  //salvar pontos a informação salva dos pontos\n  function savePoints(player, points, myObjArray){\n    setPoint([...point , {id: player, name: points}])\n    myObjArray.push({id: player, name: points});\n    console.log(myObjArray);\n    return myObjArray;\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}